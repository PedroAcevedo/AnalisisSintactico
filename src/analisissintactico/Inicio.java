/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analisissintactico;

import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Pedro_Acevedo
 */
public class Inicio extends javax.swing.JFrame {

    final static String epsilon = "&";
    DefaultListModel modelo = new DefaultListModel();
    static ArrayList<NonTerminal> NoTerminales = new ArrayList();
    static ArrayList<String> setNoTerminales = new ArrayList();
    static ArrayList<String> Terminales = new ArrayList();
    String[][] TABLAM;
    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        jTableM.setEnabled(false);
        jTableR.setEnabled(false);
        this.setLocationRelativeTo(null);
    }     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gramaticaprima = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gramatica = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        SIGUIENTE = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PRIMERO = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableM = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableR = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        TextCadena = new javax.swing.JTextField();
        Reconocer = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Análisis Sintáctico Descendente & Tabla M");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setPreferredSize(new java.awt.Dimension(335, 280));

        gramaticaprima.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gramaticaprima.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(gramaticaprima);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("GRAMATICA");

        gramatica.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gramatica.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(gramatica);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("GRAMATICA'");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 25, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        SIGUIENTE.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SIGUIENTE.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(SIGUIENTE);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("PRIMERO");

        PRIMERO.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PRIMERO.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(PRIMERO);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("SIGUIENTE");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jTableM.setAutoCreateRowSorter(true);
        jTableM.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableM.setEditingColumn(0);
        jTableM.setEditingRow(1);
        jTableM.setMaximumSize(new java.awt.Dimension(240, 20000000));
        jTableM.setRequestFocusEnabled(false);
        jTableM.setRowSorter(null);
        jScrollPane5.setViewportView(jTableM);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("TABLA M");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jTableR.setAutoCreateRowSorter(true);
        jTableR.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableR.setMaximumSize(new java.awt.Dimension(60, 200000));
        jTableR.setRequestFocusEnabled(false);
        jScrollPane6.setViewportView(jTableR);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("RECONOCIMIENTO");

        Reconocer.setText("Probar");
        Reconocer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Reconocer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReconocerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TextCadena, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Reconocer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TextCadena)
                    .addComponent(Reconocer, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Cargar Gramatica");
        jButton1.setBorderPainted(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        TextCadena.setText(""); 
        String[] c = {"Pila","Entrada","Salida"};
        String[][] R = new String[3][3];
        JTable RT = new JTable(R,c);
        jTableR.setEnabled(false);
        jTableR.setModel(RT.getModel());
        JFileChooser Chooser = new JFileChooser();
        Chooser.setAcceptAllFileFilterUsed(false);
        Chooser.setCurrentDirectory(new File("Gramaticas/"));
        int value = Chooser.showDialog(null, "Cargar");
        if (value == JFileChooser.APPROVE_OPTION) {
            if (!Chooser.getName(Chooser.getSelectedFile()).endsWith(".txt")) {
                JOptionPane.showMessageDialog(Chooser.getAccessory(), "Debes sellecionar un archivo de texto");
            } else {
                File Archivo = Chooser.getSelectedFile();
                NoTerminales = new ArrayList();
                setNoTerminales = new ArrayList();
                Terminales = new ArrayList();
                try {
                    Scanner sc = new Scanner(Archivo);
                    modelo = new DefaultListModel();
                    while(sc.hasNext()){
                        
                        String[] linea = sc.nextLine().split("->");
                        modelo.addElement(linea[0] + "->" + linea[1]);
                        getTerminal(linea[1]);
                        if (setNoTerminales.contains(linea[0])) {
                            NoTerminales.get(setNoTerminales.indexOf(linea[0])).addProduccion(linea[1]);
                        }else{
                            setNoTerminales.add(linea[0]);
                            NoTerminales.add(new NonTerminal(linea[0]));
                            NoTerminales.get(NoTerminales.size()-1).addProduccion(linea[1]);
                        }
                    }
                    sc.close();
                    gramatica.setModel(modelo);
                    ArrayList<NonTerminal> Ini = new ArrayList<>();
                    
                    NoTerminales.forEach((NoTerminal) -> {
                        Ini.add(NoTerminal);
                    });
                    
                    Ini.forEach((NoTerminal) -> {
                        NoTerminal.Comprueba();
                    });
                    modelo = new DefaultListModel();
                    NoTerminales.forEach((NoTerminal) -> {
                        NoTerminal.getProducciones().forEach((p)->{modelo.addElement(NoTerminal.getLetra()+"->"+p);});
                    });
                    gramaticaprima.setModel(modelo);
                    modelo = new DefaultListModel();
                    NoTerminales.forEach((NoTerminal) -> {
                        modelo.addElement(NoTerminal.getPRIMERO());
                    });
                    PRIMERO.setModel(modelo);
                    System.out.println("------SIGUIENTE------");
                    modelo = new DefaultListModel();
                    NoTerminales.forEach((NoTerminal) -> {
                        modelo.addElement(NoTerminal.getSIGUIENTE());
                    });
                    SIGUIENTE.setModel(modelo);
                    System.out.println("------TERMINALES------");
                    Terminales.forEach((t) -> {System.out.println(t);});
                    Terminales.add("$");
                    TABLAM = new String[setNoTerminales.size()][Terminales.size()+1];
                    for (int i = 0; i < setNoTerminales.size(); i++) {
                        TABLAM[i][0] = setNoTerminales.get(i);
                    }
                    
                    for (NonTerminal NoTerminal : NoTerminales) {
                        for (String produccion : NoTerminal.getProducciones()) {
                            ArrayList<String> PRIMEROP = NoTerminal.PRIMERO(produccion);
                                for (String terminal : PRIMEROP) {
                                    if (!terminal.equals(Inicio.epsilon)) {
                                        int i =setNoTerminales.indexOf(NoTerminal.getLetra());
                                        int j = Terminales.indexOf(terminal)+1;
                                        if (TABLAM[i][j]==null) {
                                            TABLAM[i][j] = NoTerminal.getLetra() + "->" +produccion;
                                        }else{
                                            System.out.println("ES AMBIGUA");
                                        }
                                        
                                    }
                                }
                                if (PRIMEROP.contains(Inicio.epsilon)) {
                                    ArrayList<String> SIGUIENTEP = NoTerminal.getSIGUIENTEA();
                                    for (String terminal : SIGUIENTEP) {
                                        if (!terminal.equals(Inicio.epsilon)){
                                            int i =setNoTerminales.indexOf(NoTerminal.getLetra());
                                            int j = Terminales.indexOf(terminal)+1;
                                            if (TABLAM[i][j]==null) {
                                                TABLAM[i][j] = NoTerminal.getLetra() + "->" +produccion;
                                            }else{
                                                System.out.println("ES AMBIGUA");
                                            }
                                        }
                                    }
                                }
                        }
                    }
                   Terminales.add(0," ");
                   jTableM.setEnabled(true);
                   JTable M = new JTable(TABLAM, Terminales.toArray());                    
                   jTableM.setModel(M.getModel());
                } catch (Exception ex) {
                    Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ReconocerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReconocerActionPerformed
        // TODO add your handling code here:
        ArrayList<String> PES = new ArrayList<>();
        String pila,entrada,salida;
        pila = "$" + setNoTerminales.get(0);
        entrada = TextCadena.getText() + "$";
        boolean continua = true;
        while((!pila.equals("$") | !entrada.equals("$")) && continua){
            String top = pila.substring(pila.length()-1,pila.length());
            String ec = entrada.substring(0,1);
            if (top.equals("'")) {
                top = pila.substring(pila.length()-2,pila.length());
            }
            if (top.equals(ec)) {
                PES.add(pila+"<:::>"+entrada+"<:::>"+"");
                pila = pila.substring(0,pila.length()-1);
                entrada = entrada.substring(1,entrada.length());
            }else{
                String val = null;
                if (setNoTerminales.contains(top) && Terminales.contains(ec)) {
                    val = TABLAM[setNoTerminales.indexOf(top)][Terminales.indexOf(ec)];   
                }
                if (val!=null) {
                    salida = val;
                    PES.add(pila+"<:::>"+entrada+"<:::>"+salida);
                    pila = pila.substring(0,pila.length()-top.length());
                    String[] p = salida.split("->");
                    int i = p[1].length()-1;
                    if(!p[1].equals(epsilon)){
                        while(i>=0){
                            String f = p[1].substring(i, i+1);
                            if (i>1) {
                                if (f.equals("'")) {
                                    f = p[1].substring(i-1, i)+f;
                                    i--;
                                }
                            }
                            pila = pila + f;
                            i--;
                        }
                    }else{
                        
                    }
                }else{
                    continua=false;
                }
            }
        }
        if (continua) {
            PES.add(pila+"<:::>"+entrada+"<:::>Aceptar");
        }else{
            PES.add(pila+"<:::>"+entrada+"<:::>NO Aceptar");
        }
        String[][] R = new String[PES.size()][3];
        for (int i = 0; i < PES.size(); i++) {
            String[] d = PES.get(i).split("<:::>");
            for (int j = 0; j < d.length; j++) {
                R[i][j] = d[j];
            }
        }
        String[] c = {"Pila","Entrada","Salida"};
        JTable M = new JTable(R,c);
        jTableR.setEnabled(true);
        jTableR.setModel(M.getModel());
        
    }//GEN-LAST:event_ReconocerActionPerformed
        
    public void getTerminal(String p){
        Pattern patron = Pattern.compile("[A-Z]");
        Matcher encaja = patron.matcher(p);
        String s = encaja.replaceAll("°");
        for(int i=0;i<s.length();i++){
            String t = s.substring(i, i+1);
            if (!Terminales.contains(t) && !t.isEmpty() && !t.equals(epsilon) && !t.equals("°")) {
                Terminales.add(t);   
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> PRIMERO;
    private javax.swing.JButton Reconocer;
    private javax.swing.JList<String> SIGUIENTE;
    private javax.swing.JTextField TextCadena;
    private javax.swing.JList<String> gramatica;
    private javax.swing.JList<String> gramaticaprima;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTableM;
    private javax.swing.JTable jTableR;
    // End of variables declaration//GEN-END:variables
}
